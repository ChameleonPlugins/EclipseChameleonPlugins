//\\ //// code completion entries (1+ lines):
increment (the,) nice value of (the,) calling process by increment
//\\ //// ==> completion hint (1 line):
Increment the nice value of the calling process by increment
//\\ //// Replacement text (1+ lines):
int nice (int increment)
//\\ //// Default Values, if needed (e.g. X1=x>0) (1+ lines):

//\\ //// Help/documentation (1+ lines):
Function: int nice (int increment)
Preliminary:
| MT-Unsafe race:setpriority
| AS-Unsafe 
| AC-Safe 
| See POSIX Safety Concepts.


Increment the nice value of the calling process by increment.
The return value is the new nice value on success, and -1 on
failure.  In the case of failure, errno will be set to the
same values as for setpriority.


Here is an equivalent definition of nice:


int
nice (int increment)
{
  int result, old = getpriority (PRIO_PROCESS, 0);
  result = setpriority (PRIO_PROCESS, 0, old + increment);
  if (result != -1)
      return old + increment;
  else
      return -1;
}
file:///C:/My%20Web%20Sites/C-language/C-libC_pages/www.gnu.org/software/libc/manual/html_node//Traditional-Scheduling-Functions.html#Traditional-Scheduling-Functions
//\\ //// Tool tip (1 line):

//\\ //// Template path (e.g. core/sayHi.txt) (1 line):
/../../../templates/libc/Traditional-Scheduling-Functions/nice.txt