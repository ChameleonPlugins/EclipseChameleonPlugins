//\\ //// code completion entries (1+ lines):
is similar to (the,) strtol function with (a,) base argument of 10, except that it need not detect overflow errors
//\\ //// ==> completion hint (1 line):
is similar to the strtol function with a base argument of 10, except that it need not detect overflow errors
//\\ //// Replacement text (1+ lines):
long int atol (X1tring)
//\\ //// Default Values, if needed (e.g. X1=x>0) (1+ lines):
X1="dog"

//\\ //// Help/documentation (1+ lines):
Function: long int atol (const char *string)
Preliminary:
| MT-Safe locale
| AS-Safe 
| AC-Safe 
| See POSIX Safety Concepts.


This function is similar to the strtol function with a base
argument of 10, except that it need not detect overflow errors.
The atol function is provided mostly for compatibility with
existing code; using strtol is more robust.
file:///C:/My%20Web%20Sites/C-language/C-libC_pages/www.gnu.org/software/libc/manual/html_node//Parsing-of-Integers.html#Parsing-of-Integers
//\\ //// Tool tip (1 line):

//\\ //// Template path (e.g. core/sayHi.txt) (1 line):
/../../../templates/libc/Parsing-of-Integers/atol.txt