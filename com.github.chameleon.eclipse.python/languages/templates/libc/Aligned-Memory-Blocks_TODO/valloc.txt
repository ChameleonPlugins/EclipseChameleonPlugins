//\\ //// code completion entries (1+ lines):
using valloc is like using memalign and passing (the,) page size as (the,) value of (the,) second argument
//\\ //// ==> completion hint (1 line):
Using valloc is like using memalign and passing the page size as the value of the second argument
//\\ //// Replacement text (1+ lines):
struct utsname *buf;
buf = valloc (size_t size)
//\\ //// Default Values, if needed (e.g. X1=x>0) (1+ lines):

//\\ //// Help/documentation (1+ lines):
Function: void * valloc (size_t size)
Preliminary:
| MT-Unsafe init
| AS-Unsafe init lock
| AC-Unsafe init lock fd mem
| See POSIX Safety Concepts.


Using valloc is like using memalign and passing the page size
as the value of the second argument.  It is implemented like this:


void *
valloc (size_t size)
{
  return memalign (getpagesize (), size);
}


Query Memory Parameters for more information about the memory
subsystem.

The valloc function is obsolete and aligned_alloc or
posix_memalign should be used instead.
file:///C:/My%20Web%20Sites/C-language/C-libC_pages/www.gnu.org/software/libc/manual/html_node//Aligned-Memory-Blocks.html#Aligned-Memory-Blocks
//\\ //// Tool tip (1 line):

//\\ //// Template path (e.g. core/sayHi.txt) (1 line):
/../../../templates/libc/Aligned-Memory-Blocks/valloc.txt