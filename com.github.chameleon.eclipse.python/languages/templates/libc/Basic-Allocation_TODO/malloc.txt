//\\ //// code completion entries (1+ lines):
(allocate,find,get,grab,lock,obtain,reserve,retrieve,return) (a,) pointer to (a,) newly allocated block size bytes long, or (a,) null pointer if (the,) block could not be allocated
//\\ //// ==> completion hint (1 line):
returns a pointer to a newly allocated block size bytes long, or a null pointer if the block could not be allocated
//\\ //// Replacement text (1+ lines):
struct utsname *buf;
buf = malloc (size_t size)
//\\ //// Default Values, if needed (e.g. X1=x>0) (1+ lines):

//\\ //// Help/documentation (1+ lines):
Function: void * malloc (size_t size)
Preliminary:
| MT-Safe 
| AS-Unsafe lock
| AC-Unsafe lock fd mem
| See POSIX Safety Concepts.




This function returns a pointer to a newly allocated block size
bytes long, or a null pointer if the block could not be allocated.
file:///C:/My%20Web%20Sites/C-language/C-libC_pages/www.gnu.org/software/libc/manual/html_node//Basic-Allocation.html#Basic-Allocation
//\\ //// Tool tip (1 line):

//\\ //// Template path (e.g. core/sayHi.txt) (1 line):
/../../../templates/libc/Basic-Allocation/malloc.txt