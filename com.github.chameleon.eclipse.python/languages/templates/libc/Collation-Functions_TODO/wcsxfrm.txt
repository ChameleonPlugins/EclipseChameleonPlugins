//\\ //// code completion entries (1+ lines):
(the,) function wcsxfrm transforms wide character (string,text) wfrom using (the,) collation transformation determined by (the,) locale currently selected for collation, and stores (the,) transformed (string,text) in (the,) array wto
//\\ //// ==> completion hint (1 line):
The function wcsxfrm transforms wide character string wfrom using the collation transformation determined by the locale currently selected for collation, and stores the transformed string in the array wto
//\\ //// Replacement text (1+ lines):
size_t size=wcsxfrm (wchar_t *restrict wto, const wchar_t *wfrom, size_t size)
//\\ //// Default Values, if needed (e.g. X1=x>0) (1+ lines):

//\\ //// Help/documentation (1+ lines):
Function: size_t wcsxfrm (wchar_t *restrict wto, const wchar_t *wfrom, size_t size)
Preliminary:
| MT-Safe locale
| AS-Unsafe heap
| AC-Unsafe mem
| See POSIX Safety Concepts.


The function wcsxfrm transforms wide character string wfrom
using the collation transformation determined by the locale currently
selected for collation, and stores the transformed string in the array
wto.  Up to size wide characters (including a terminating null
character) are stored.

The behavior is undefined if the strings wto and wfrom
overlap; see Copying and Concatenation.

The return value is the length of the entire transformed wide character
string.  This value is not affected by the value of size, but if
it is greater or equal than size, it means that the transformed
wide character string did not entirely fit in the array wto.  In
this case, only as much of the wide character string as actually fits
was stored.  To get the whole transformed wide character string, call
wcsxfrm again with a bigger output array.

The transformed wide character string may be longer than the original
wide character string, and it may also be shorter.

If size is zero, no characters are stored in to.  In this
case, wcsxfrm simply returns the number of wide characters that
would be the length of the transformed wide character string.  This is
useful for determining what size the allocated array should be (remember
to multiply with sizeof (wchar_t)).  It does not matter what
wto is if size is zero; wto may even be a null pointer.
file:///C:/My%20Web%20Sites/C-language/C-libC_pages/www.gnu.org/software/libc/manual/html_node//Collation-Functions.html#Collation-Functions
//\\ //// Tool tip (1 line):

//\\ //// Template path (e.g. core/sayHi.txt) (1 line):
/../../../templates/libc/Collation-Functions/wcsxfrm.txt