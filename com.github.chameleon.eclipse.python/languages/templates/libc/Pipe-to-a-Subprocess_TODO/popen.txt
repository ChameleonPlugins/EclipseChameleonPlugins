//\\ //// code completion entries (1+ lines):
is closely related to (the,) (box,computer,system,node,host,target) function
//\\ //// ==> completion hint (1 line):
is closely related to the system function
//\\ //// Replacement text (1+ lines):
FILE * popen (const char *command, const char *mode)
//\\ //// Default Values, if needed (e.g. X1=x>0) (1+ lines):

//\\ //// Help/documentation (1+ lines):
Function: FILE * popen (const char *command, const char *mode)
Preliminary:
| MT-Safe 
| AS-Unsafe heap corrupt
| AC-Unsafe corrupt lock fd mem
| See POSIX Safety Concepts.


The popen function is closely related to the system
function; see Running a Command.  It executes the shell command
command as a subprocess.  However, instead of waiting for the
command to complete, it creates a pipe to the subprocess and returns a
stream that corresponds to that pipe.

If you specify a mode argument of &quot;r&quot;, you can read from the
stream to retrieve data from the standard output channel of the subprocess.
The subprocess inherits its standard input channel from the parent process.

Similarly, if you specify a mode argument of &quot;w&quot;, you can
write to the stream to send data to the standard input channel of the
subprocess.  The subprocess inherits its standard output channel from
the parent process.

In the event of an error popen returns a null pointer.  This
might happen if the pipe or stream cannot be created, if the subprocess
cannot be forked, or if the program cannot be executed.
file:///C:/My%20Web%20Sites/C-language/C-libC_pages/www.gnu.org/software/libc/manual/html_node//Pipe-to-a-Subprocess.html#Pipe-to-a-Subprocess
//\\ //// Tool tip (1 line):

//\\ //// Template path (e.g. core/sayHi.txt) (1 line):
/../../../templates/libc/Pipe-to-a-Subprocess/popen.txt