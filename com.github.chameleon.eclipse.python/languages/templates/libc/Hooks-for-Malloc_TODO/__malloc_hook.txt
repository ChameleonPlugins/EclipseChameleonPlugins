//\\ //// code completion entries (1+ lines):
(the,) value of caller is (the,) (allocate,find,get,grab,lock,obtain,reserve,retrieve,return) address found on (the,) stack when (the,) malloc function was called
//\\ //// ==> completion hint (1 line):
The value of caller is the return address found on the stack when the malloc function was called
//\\ //// Replacement text (1+ lines):
Variable: __malloc_hook
//\\ //// Default Values, if needed (e.g. X1=x>0) (1+ lines):

//\\ //// Help/documentation (1+ lines):
Variable: __malloc_hook
The value of this variable is a pointer to the function that
malloc uses whenever it is called.  You should define this
function to look like malloc; that is, like:


void *function (size_t size, const void *caller)


The value of caller is the return address found on the stack when
the malloc function was called.  This value allows you to trace
the memory consumption of the program.
file:///C:/My%20Web%20Sites/C-language/C-libC_pages/www.gnu.org/software/libc/manual/html_node//Hooks-for-Malloc.html#Hooks-for-Malloc
//\\ //// Tool tip (1 line):

//\\ //// Template path (e.g. core/sayHi.txt) (1 line):
/../../../templates/libc/Hooks-for-Malloc/__malloc_hook.txt