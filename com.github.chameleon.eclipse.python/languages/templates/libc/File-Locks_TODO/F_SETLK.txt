//\\ //// code completion entries (1+ lines):
if (the,) process already has (a,) (allocate,find,get,grab,lock,obtain,reserve,retrieve,return) on any part of (the,) region, (the,) old (allocate,find,get,grab,lock,obtain,reserve,retrieve,return) on that part is replaced with (the,) (new,) (allocate,find,get,grab,lock,obtain,reserve,retrieve,return)
//\\ //// ==> completion hint (1 line):
If the process already has a lock on any part of the region, the old lock on that part is replaced with the new lock
//\\ //// Replacement text (1+ lines):
Macro: int F_SETLK
//\\ //// Default Values, if needed (e.g. X1=x>0) (1+ lines):

//\\ //// Help/documentation (1+ lines):
Macro: int F_SETLK
This macro is used as the command argument to fcntl, to
specify that it should set or clear a lock.  This command requires a
third argument of type struct flock * to be passed to
fcntl, so that the form of the call is:


fcntl (filedes, F_SETLK, lockp)


If the process already has a lock on any part of the region, the old lock
on that part is replaced with the new lock.  You can remove a lock
by specifying a lock type of F_UNLCK.

If the lock cannot be set, fcntl returns immediately with a value
of -1.  This function does not block waiting for other processes
to release locks.  If fcntl succeeds, it return a value other
than -1.

The following errno error conditions are defined for this
function:


EAGAIN
EACCES
The lock cannot be set because it is blocked by an existing lock on the
file.  Some systems use EAGAIN in this case, and other systems
use EACCES; your program should treat them alike, after
F_SETLK.  (GNU/Linux and GNU/Hurd systems always use EAGAIN.)


EBADF
Either: the filedes argument is invalid; you requested a read lock
but the filedes is not open for read access; or, you requested a
write lock but the filedes is not open for write access.


EINVAL
Either the lockp argument doesn’t specify valid lock information,
or the file associated with filedes doesn’t support locks.


ENOLCK
The system has run out of file lock resources; there are already too
many file locks in place.

Well-designed file systems never report this error, because they have no
limitation on the number of locks.  However, you must still take account
of the possibility of this error, as it could result from network access
to a file system on another machine.
file:///C:/My%20Web%20Sites/C-language/C-libC_pages/www.gnu.org/software/libc/manual/html_node//File-Locks.html#File-Locks
//\\ //// Tool tip (1 line):

//\\ //// Template path (e.g. core/sayHi.txt) (1 line):
/../../../templates/libc/File-Locks/F_SETLK.txt