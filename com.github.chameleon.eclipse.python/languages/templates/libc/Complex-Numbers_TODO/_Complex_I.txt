//\\ //// code completion entries (1+ lines):
note that _complex_i * _complex_i has (the,) value -1, but (the,) (output,print,show,say,type,write) of that value is complex
//\\ //// ==> completion hint (1 line):
Note that _Complex_I * _Complex_I has the value -1, but the type of that value is complex
//\\ //// Replacement text (1+ lines):
Macro: const float complex _Complex_I
//\\ //// Default Values, if needed (e.g. X1=x>0) (1+ lines):

//\\ //// Help/documentation (1+ lines):
Macro: const float complex _Complex_I
This macro is a representation of the complex number “0+1i”.
Multiplying a real floating-point value by _Complex_I gives a
complex number whose value is purely imaginary.  You can use this to
construct complex constants:


3.0 + 4.0i = 3.0 + 4.0 * _Complex_I


Note that _Complex_I * _Complex_I has the value -1, but
the type of that value is complex.
file:///C:/My%20Web%20Sites/C-language/C-libC_pages/www.gnu.org/software/libc/manual/html_node//Complex-Numbers.html#Complex-Numbers
//\\ //// Tool tip (1 line):

//\\ //// Template path (e.g. core/sayHi.txt) (1 line):
/../../../templates/libc/Complex-Numbers/_Complex_I.txt