//\\ //// code completion entries (1+ lines):
is similar to fgetpwent in that it reads (the,) next user entry from stream
//\\ //// ==> completion hint (1 line):
is similar to fgetpwent in that it reads the next user entry from stream
//\\ //// Replacement text (1+ lines):
int fgetpwent_r (FILE *stream, struct passwd *result_buf, char *buffer, size_t buflen, struct passwd **result)
//\\ //// Default Values, if needed (e.g. X1=x>0) (1+ lines):

//\\ //// Help/documentation (1+ lines):
Function: int fgetpwent_r (FILE *stream, struct passwd *result_buf, char *buffer, size_t buflen, struct passwd **result)
Preliminary:
| MT-Safe 
| AS-Unsafe corrupt
| AC-Unsafe corrupt lock
| See POSIX Safety Concepts.


This function is similar to fgetpwent in that it reads the next
user entry from stream.  But the result is returned in the
structure pointed to by result_buf.  The
first buflen bytes of the additional buffer pointed to by
buffer are used to contain additional information, normally
strings which are pointed to by the elements of the result structure.

The stream must correspond to a file in the same format as the standard
password database file.

If the function returns zero result points to the structure with
the wanted data (normally this is in result_buf).  If errors
occurred the return value is nonzero and result contains a null
pointer.
file:///C:/My%20Web%20Sites/C-language/C-libC_pages/www.gnu.org/software/libc/manual/html_node//Scanning-All-Users.html#Scanning-All-Users
//\\ //// Tool tip (1 line):

//\\ //// Template path (e.g. core/sayHi.txt) (1 line):
/../../../templates/libc/Scanning-All-Users/fgetpwent_r.txt