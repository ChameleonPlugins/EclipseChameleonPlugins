//\\ //// code completion entries (1+ lines):
if usage is (a,) null pointer, wait4 is equivalent to waitpid (
//\\ //// ==> completion hint (1 line):
If usage is a null pointer, wait4 is equivalent to waitpid (
//\\ //// Replacement text (1+ lines):
pid_t wait4 (pid_t pid, int *status-ptr, int options, struct rusage *usage)
//\\ //// Default Values, if needed (e.g. X1=x>0) (1+ lines):

//\\ //// Help/documentation (1+ lines):
Function: pid_t wait4 (pid_t pid, int *status-ptr, int options, struct rusage *usage)
Preliminary:
| MT-Safe 
| AS-Safe 
| AC-Safe 
| See POSIX Safety Concepts.


If usage is a null pointer, wait4 is equivalent to
waitpid (pid, status-ptr, options).

If usage is not null, wait4 stores usage figures for the
child process in *rusage (but only if the child has
terminated, not if it has stopped).  See Resource Usage.

This function is a BSD extension.
file:///C:/My%20Web%20Sites/C-language/C-libC_pages/www.gnu.org/software/libc/manual/html_node//Process-Completion.html#Process-Completion
//\\ //// Tool tip (1 line):

//\\ //// Template path (e.g. core/sayHi.txt) (1 line):
/../../../templates/libc/Process-Completion/wait4.txt