//\\ //// code completion entries (1+ lines):
is like stat, except that it does not follow symbolic links
//\\ //// ==> completion hint (1 line):
is like stat, except that it does not follow symbolic links
//\\ //// Replacement text (1+ lines):
int lstat (X1, struct stat *buf)
//\\ //// Default Values, if needed (e.g. X1=x>0) (1+ lines):
X1="filename.txt"

//\\ //// Help/documentation (1+ lines):
Function: int lstat (const char *filename, struct stat *buf)
Preliminary:
| MT-Safe 
| AS-Safe 
| AC-Safe 
| See POSIX Safety Concepts.


The lstat function is like stat, except that it does not
follow symbolic links.  If filename is the name of a symbolic
link, lstat returns information about the link itself; otherwise
lstat works like stat.  See Symbolic Links.

When the sources are compiled with _FILE_OFFSET_BITS == 64 this
function is in fact lstat64 since the LFS interface transparently
replaces the normal implementation.
file:///C:/My%20Web%20Sites/C-language/C-libC_pages/www.gnu.org/software/libc/manual/html_node//Reading-Attributes.html#Reading-Attributes
//\\ //// Tool tip (1 line):

//\\ //// Template path (e.g. core/sayHi.txt) (1 line):
/../../../templates/libc/Reading-Attributes/lstat.txt