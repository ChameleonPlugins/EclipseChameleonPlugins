//\\ //// code completion entries (1+ lines):
(allocate,find,get,grab,lock,obtain,reserve,retrieve,return) information about (the,) value of option optname at level level for socket socket
//\\ //// ==> completion hint (1 line):
gets information about the value of option optname at level level for socket socket
//\\ //// Replacement text (1+ lines):
int getsockopt (int socket, int level, int optname, void *optval, socklen_t *optlen-ptr)
//\\ //// Default Values, if needed (e.g. X1=x>0) (1+ lines):

//\\ //// Help/documentation (1+ lines):
Function: int getsockopt (int socket, int level, int optname, void *optval, socklen_t *optlen-ptr)
Preliminary:
| MT-Safe 
| AS-Safe 
| AC-Safe 
| See POSIX Safety Concepts.


The getsockopt function gets information about the value of
option optname at level level for socket socket.

The option value is stored in a buffer that optval points to.
Before the call, you should supply in *optlen-ptr the
size of this buffer; on return, it contains the number of bytes of
information actually stored in the buffer.

Most options interpret the optval buffer as a single int
value.

The actual return value of getsockopt is 0 on success
and -1 on failure.  The following errno error conditions
are defined:


EBADF
The socket argument is not a valid file descriptor.


ENOTSOCK
The descriptor socket is not a socket.


ENOPROTOOPT
The optname doesn’t make sense for the given level.
file:///C:/My%20Web%20Sites/C-language/C-libC_pages/www.gnu.org/software/libc/manual/html_node//Socket-Option-Functions.html#Socket-Option-Functions
//\\ //// Tool tip (1 line):

//\\ //// Template path (e.g. core/sayHi.txt) (1 line):
/../../../templates/libc/Socket-Option-Functions/getsockopt.txt