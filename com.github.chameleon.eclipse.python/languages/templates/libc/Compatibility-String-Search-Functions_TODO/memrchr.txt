//\\ //// code completion entries (1+ lines):
(the,) function memrchr is like memchr, except that it searches backwards from (the,) (end,exit,quit,(halt,pause,stop,suspend)) of (the,) block defined by block and size 
//\\ //// ==> completion hint (1 line):
The function memrchr is like memchr, except that it searches backwards from the end of the block defined by block and size 
//\\ //// Replacement text (1+ lines):
struct utsname *buf;
buf = memrchr (const void *block, X2, size_t size)
//\\ //// Default Values, if needed (e.g. X1=x>0) (1+ lines):
X2='a'

//\\ //// Help/documentation (1+ lines):
Function: void * memrchr (const void *block, int c, size_t size)
Preliminary:
| MT-Safe 
| AS-Safe 
| AC-Safe 
| See POSIX Safety Concepts.


The function memrchr is like memchr, except that it searches
backwards from the end of the block defined by block and size
(instead of forwards from the front).

This function is a GNU extension.
file:///C:/My%20Web%20Sites/C-language/C-libC_pages/www.gnu.org/software/libc/manual/html_node//Search-Functions.html#Compatibility-String-Search-Functions
//\\ //// Tool tip (1 line):

//\\ //// Template path (e.g. core/sayHi.txt) (1 line):
/../../../templates/libc/Compatibility-String-Search-Functions/memrchr.txt