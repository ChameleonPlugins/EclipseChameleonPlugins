//\\ //// code completion entries (1+ lines):
is (a,) somewhat more powerful variant of atexit
//\\ //// ==> completion hint (1 line):
is a somewhat more powerful variant of atexit
//\\ //// Replacement text (1+ lines):
int on_exit (void (*function)(int status, void *arg), void *arg)
//\\ //// Default Values, if needed (e.g. X1=x>0) (1+ lines):

//\\ //// Help/documentation (1+ lines):
Function: int on_exit (void (*function)(int status, void *arg), void *arg)
Preliminary:
| MT-Safe 
| AS-Unsafe heap lock
| AC-Unsafe lock mem
| See POSIX Safety Concepts.


This function is a somewhat more powerful variant of atexit.  It
accepts two arguments, a function function and an arbitrary
pointer arg.  At normal program termination, the function is
called with two arguments:  the status value passed to exit,
and the arg.

This function is included in the GNU C Library only for compatibility
for SunOS, and may not be supported by other implementations.
file:///C:/My%20Web%20Sites/C-language/C-libC_pages/www.gnu.org/software/libc/manual/html_node//Cleanups-on-Exit.html#Cleanups-on-Exit
//\\ //// Tool tip (1 line):

//\\ //// Template path (e.g. core/sayHi.txt) (1 line):
/../../../templates/libc/Cleanups-on-Exit/on_exit.txt