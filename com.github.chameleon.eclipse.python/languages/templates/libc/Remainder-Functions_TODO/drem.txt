//\\ //// code completion entries (1+ lines):
these functions are like fmod except that they round (the,) internal quotient n to (the,) nearest integer instead of towards zero to (an,) integer
//\\ //// ==> completion hint (1 line):
These functions are like fmod except that they round the internal quotient n to the nearest integer instead of towards zero to an integer
//\\ //// Replacement text (1+ lines):
double drem (double numerator, double denominator)
//\\ //// Default Values, if needed (e.g. X1=x>0) (1+ lines):

//\\ //// Help/documentation (1+ lines):
Function: double drem (double numerator, double denominator)
Function: float dremf (float numerator, float denominator)
Function: long double dreml (long double numerator, long double denominator)
Preliminary:
| MT-Safe 
| AS-Safe 
| AC-Safe 
| See POSIX Safety Concepts.


These functions are like fmod except that they round the
internal quotient n to the nearest integer instead of towards zero
to an integer.  For example, drem (6.5, 2.3) returns -0.4,
which is 6.5 minus 6.9.

The absolute value of the result is less than or equal to half the
absolute value of the denominator.  The difference between
fmod (numerator, denominator) and drem
(numerator, denominator) is always either
denominator, minus denominator, or zero.

If denominator is zero, drem signals a domain error.
file:///C:/My%20Web%20Sites/C-language/C-libC_pages/www.gnu.org/software/libc/manual/html_node//Remainder-Functions.html#Remainder-Functions
//\\ //// Tool tip (1 line):

//\\ //// Template path (e.g. core/sayHi.txt) (1 line):
/../../../templates/libc/Remainder-Functions/drem.txt