//\\ //// code completion entries (1+ lines):
is similar to strdup but always copies at most size characters into (the,) newly allocated (string,text)
//\\ //// ==> completion hint (1 line):
is similar to strdup but always copies at most size characters into the newly allocated string
//\\ //// Replacement text (1+ lines):
char * strndup (X1, size_t size)
//\\ //// Default Values, if needed (e.g. X1=x>0) (1+ lines):
X1="dog"

//\\ //// Help/documentation (1+ lines):
Function: char * strndup (const char *s, size_t size)
Preliminary:
| MT-Safe 
| AS-Unsafe heap
| AC-Unsafe mem
| See POSIX Safety Concepts.


This function is similar to strdup but always copies at most
size characters into the newly allocated string.

If the length of s is more than size, then strndup
copies just the first size characters and adds a closing null
terminator.  Otherwise all characters are copied and the string is
terminated.

This function is different to strncpy in that it always
terminates the destination string.

strndup is a GNU extension.
file:///C:/My%20Web%20Sites/C-language/C-libC_pages/www.gnu.org/software/libc/manual/html_node//Copying-and-Concatenation.html#Copying-and-Concatenation
//\\ //// Tool tip (1 line):

//\\ //// Template path (e.g. core/sayHi.txt) (1 line):
/../../../templates/libc/Copying-and-Concatenation/strndup.txt