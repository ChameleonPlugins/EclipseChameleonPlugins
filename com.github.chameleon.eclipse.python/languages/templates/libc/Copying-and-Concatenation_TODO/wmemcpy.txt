//\\ //// code completion entries (1+ lines):
copies size wide characters from (the,) object beginning at wfrom into (the,) object beginning at wto
//\\ //// ==> completion hint (1 line):
copies size wide characters from the object beginning at wfrom into the object beginning at wto
//\\ //// Replacement text (1+ lines):
wchar_t * wmemcpy (wchar_t *restrict wto, const wchar_t *restrict wfrom, size_t size)
//\\ //// Default Values, if needed (e.g. X1=x>0) (1+ lines):

//\\ //// Help/documentation (1+ lines):
Function: wchar_t * wmemcpy (wchar_t *restrict wto, const wchar_t *restrict wfrom, size_t size)
Preliminary:
| MT-Safe 
| AS-Safe 
| AC-Safe 
| See POSIX Safety Concepts.


The wmemcpy function copies size wide characters from the object
beginning at wfrom into the object beginning at wto.  The
behavior of this function is undefined if the two arrays wto and
wfrom overlap; use wmemmove instead if overlapping is possible.

The following is a possible implementation of wmemcpy but there
are more optimizations possible.


wchar_t *
wmemcpy (wchar_t *restrict wto, const wchar_t *restrict wfrom,
         size_t size)
{
  return (wchar_t *) memcpy (wto, wfrom, size * sizeof (wchar_t));
}


The value returned by wmemcpy is the value of wto.

This function was introduced in Amendment 1 to ISO C90.
file:///C:/My%20Web%20Sites/C-language/C-libC_pages/www.gnu.org/software/libc/manual/html_node//Copying-and-Concatenation.html#Copying-and-Concatenation
//\\ //// Tool tip (1 line):

//\\ //// Template path (e.g. core/sayHi.txt) (1 line):
/../../../templates/libc/Copying-and-Concatenation/wmemcpy.txt