//\\ //// code completion entries (1+ lines):
tests whether (the,) triple specified by (the,) parameters hostp, userp, and domainp is part of (the,) netgroup netgroup
//\\ //// ==> completion hint (1 line):
tests whether the triple specified by the parameters hostp, userp, and domainp is part of the netgroup netgroup
//\\ //// Replacement text (1+ lines):
int innetgr (const char *netgroup, const char *host, const char *user, const char *domain)
//\\ //// Default Values, if needed (e.g. X1=x>0) (1+ lines):

//\\ //// Help/documentation (1+ lines):
Function: int innetgr (const char *netgroup, const char *host, const char *user, const char *domain)
Preliminary:
| MT-Unsafe race:netgrent locale
| AS-Unsafe dlopen plugin heap lock
| AC-Unsafe corrupt lock fd mem
| See POSIX Safety Concepts.


This function tests whether the triple specified by the parameters
hostp, userp, and domainp is part of the netgroup
netgroup.  Using this function has the advantage that


 no other netgroup function can use the global netgroup state since
internal locking is used and
 the function is implemented more efficiently than successive calls
to the other set/get/endnetgrent functions.


Any of the pointers hostp, userp, and domainp can be
NULL which means any value is accepted in this position.  This is
also true for the name - which should not match any other string
otherwise.

The return value is 1 if an entry matching the given triple is
found in the netgroup.  The return value is 0 if the netgroup
itself is not found, the netgroup does not contain the triple or
internal errors occurred.
file:///C:/My%20Web%20Sites/C-language/C-libC_pages/www.gnu.org/software/libc/manual/html_node//Netgroup-Membership.html#Netgroup-Membership
//\\ //// Tool tip (1 line):

//\\ //// Template path (e.g. core/sayHi.txt) (1 line):
/../../../templates/libc/Netgroup-Membership/innetgr.txt