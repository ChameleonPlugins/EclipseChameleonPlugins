//\\ //// code completion entries (1+ lines):
(the,) value of bufsiz is chosen on each (box,computer,system,node,host,target) so as to (add,append,construct,create,define,insert,make,push) stream i/o efficient
//\\ //// ==> completion hint (1 line):
The value of BUFSIZ is chosen on each system so as to make stream I/O efficient
//\\ //// Replacement text (1+ lines):
Macro: int BUFSIZ
//\\ //// Default Values, if needed (e.g. X1=x>0) (1+ lines):

//\\ //// Help/documentation (1+ lines):
Macro: int BUFSIZ
The value of this macro is an integer constant expression that is good
to use for the size argument to setvbuf.  This value is
guaranteed to be at least 256.

The value of BUFSIZ is chosen on each system so as to make stream
I/O efficient.  So it is a good idea to use BUFSIZ as the size
for the buffer when you call setvbuf.

Actually, you can get an even better value to use for the buffer size
by means of the fstat system call: it is found in the
st_blksize field of the file attributes.  See Attribute Meanings.

Sometimes people also use BUFSIZ as the allocation size of
buffers used for related purposes, such as strings used to receive a
line of input with fgets (see Character Input).  There is no
particular reason to use BUFSIZ for this instead of any other
integer, except that it might lead to doing I/O in chunks of an
efficient size.
file:///C:/My%20Web%20Sites/C-language/C-libC_pages/www.gnu.org/software/libc/manual/html_node//Controlling-Buffering.html#Controlling-Buffering
//\\ //// Tool tip (1 line):

//\\ //// Template path (e.g. core/sayHi.txt) (1 line):
/../../../templates/libc/Controlling-Buffering/BUFSIZ.txt