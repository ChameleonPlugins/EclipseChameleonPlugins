//\\ //// code completion entries (1+ lines):
is similar to open
//\\ //// ==> completion hint (1 line):
is similar to open
//\\ //// Replacement text (1+ lines):
int open64 (X1, X2[, mode_t mode])
//\\ //// Default Values, if needed (e.g. X1=x>0) (1+ lines):
X1="filename.txt"
X2=MAP_SHARED

//\\ //// Help/documentation (1+ lines):
Function: int open64 (const char *filename, int flags[, mode_t mode])
Preliminary:
| MT-Safe 
| AS-Safe 
| AC-Safe fd
| See POSIX Safety Concepts.


This function is similar to open.  It returns a file descriptor
which can be used to access the file named by filename.  The only
difference is that on 32 bit systems the file is opened in the
large file mode.  I.e., file length and file offsets can exceed 31 bits.

When the sources are translated with _FILE_OFFSET_BITS == 64 this
function is actually available under the name open.  I.e., the
new, extended API using 64 bit file sizes and offsets transparently
replaces the old API.
file:///C:/My%20Web%20Sites/C-language/C-libC_pages/www.gnu.org/software/libc/manual/html_node//Opening-and-Closing-Files.html#Opening-and-Closing-Files
//\\ //// Tool tip (1 line):

//\\ //// Template path (e.g. core/sayHi.txt) (1 line):
/../../../templates/libc/Opening-and-Closing-Files/open64.txt