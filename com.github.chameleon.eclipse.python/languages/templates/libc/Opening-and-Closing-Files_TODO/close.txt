//\\ //// code completion entries (1+ lines):
(the,) function close closes (the,) file descriptor X:FILEDESCRIPTOR
//\\ //// ==> completion hint (1 line):
The function close closes the file descriptor filedes
//\\ //// Replacement text (1+ lines):
X1lose (X1)
//\\ //// Default Values, if needed (e.g. X1=x>0) (1+ lines):
X1='a'
X1=fd

//\\ //// Help/documentation (1+ lines):
Function: int close (int filedes)
Preliminary:
| MT-Safe 
| AS-Safe 
| AC-Safe fd
| See POSIX Safety Concepts.


The function close closes the file descriptor filedes.
Closing a file has the following consequences:


 The file descriptor is deallocated.

 Any record locks owned by the process on the file are unlocked.

 When all file descriptors associated with a pipe or FIFO have been closed,
any unread data is discarded.


This function is a cancellation point in multi-threaded programs.  This
is a problem if the thread allocates some resources (like memory, file
descriptors, semaphores or whatever) at the time close is
called.  If the thread gets canceled these resources stay allocated
until the program ends.  To avoid this, calls to close should be
protected using cancellation handlers.

The normal return value from close is 0; a value of -1
is returned in case of failure.  The following errno error
conditions are defined for this function:


EBADF
The filedes argument is not a valid file descriptor.


EINTR
The close call was interrupted by a signal.
See Interrupted Primitives.
Here is an example of how to handle EINTR properly:


TEMP_FAILURE_RETRY (close (desc));



ENOSPC
EIO
EDQUOT
When the file is accessed by NFS, these errors from write can sometimes
not be detected until close.  See I/O Primitives, for details
on their meaning.



Please note that there is no separate close64 function.
This is not necessary since this function does not determine nor depend
on the mode of the file.  The kernel which performs the close
operation knows which mode the descriptor is used for and can handle
this situation.
file:///C:/My%20Web%20Sites/C-language/C-libC_pages/www.gnu.org/software/libc/manual/html_node//Opening-and-Closing-Files.html#Opening-and-Closing-Files
//\\ //// Tool tip (1 line):

//\\ //// Template path (e.g. core/sayHi.txt) (1 line):
/../../../templates/libc/Opening-and-Closing-Files/close.txt