//\\ //// code completion entries (1+ lines):
(the,) way erroneous bytes are marked is with two preceding bytes, 377 and 0
//\\ //// ==> completion hint (1 line):
The way erroneous bytes are marked is with two preceding bytes, 377 and 0
//\\ //// Replacement text (1+ lines):
Macro: tcflag_t PARMRK
//\\ //// Default Values, if needed (e.g. X1=x>0) (1+ lines):

//\\ //// Help/documentation (1+ lines):
Macro: tcflag_t PARMRK
If this bit is set, input bytes with parity or framing errors are marked
when passed to the program.  This bit is meaningful only when
INPCK is set and IGNPAR is not set.

The way erroneous bytes are marked is with two preceding bytes,
377 and 0.  Thus, the program actually reads three bytes
for one erroneous byte received from the terminal.

If a valid byte has the value 0377, and ISTRIP (see below)
is not set, the program might confuse it with the prefix that marks a
parity error.  So a valid byte 0377 is passed to the program as
two bytes, 0377 0377, in this case.
file:///C:/My%20Web%20Sites/C-language/C-libC_pages/www.gnu.org/software/libc/manual/html_node//Input-Modes.html#Input-Modes
//\\ //// Tool tip (1 line):

//\\ //// Template path (e.g. core/sayHi.txt) (1 line):
/../../../templates/libc/Input-Modes/PARMRK.txt