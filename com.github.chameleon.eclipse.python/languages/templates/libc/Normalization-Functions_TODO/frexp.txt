//\\ //// code completion entries (1+ lines):
these functions are used to (divide,split,separate) (the,) number value into (a,) normalized fraction and (an,) exponent
//\\ //// ==> completion hint (1 line):
These functions are used to split the number value into a normalized fraction and an exponent
//\\ //// Replacement text (1+ lines):
double frexp (double value, int *exponent)
//\\ //// Default Values, if needed (e.g. X1=x>0) (1+ lines):

//\\ //// Help/documentation (1+ lines):
Function: double frexp (double value, int *exponent)
Function: float frexpf (float value, int *exponent)
Function: long double frexpl (long double value, int *exponent)
Preliminary:
| MT-Safe 
| AS-Safe 
| AC-Safe 
| See POSIX Safety Concepts.


These functions are used to split the number value
into a normalized fraction and an exponent.

If the argument value is not zero, the return value is value
times a power of two, and its magnitude is always in the range 1/2
(inclusive) to 1 (exclusive).  The corresponding exponent is stored in
*exponent; the return value multiplied by 2 raised to this
exponent equals the original number value.

For example, frexp (12.8, &amp;exponent) returns 0.8 and
stores 4 in exponent.

If value is zero, then the return value is zero and
zero is stored in *exponent.
file:///C:/My%20Web%20Sites/C-language/C-libC_pages/www.gnu.org/software/libc/manual/html_node//Normalization-Functions.html#Normalization-Functions
//\\ //// Tool tip (1 line):

//\\ //// Template path (e.g. core/sayHi.txt) (1 line):
/../../../templates/libc/Normalization-Functions/frexp.txt