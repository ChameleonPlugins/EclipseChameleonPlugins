//\\ //// code completion entries (1+ lines):
(allocate,find,get,grab,lock,obtain,reserve,retrieve,return) (a,) (string,text) that is (the,) value of (the,) environment variable name
//\\ //// ==> completion hint (1 line):
returns a string that is the value of the environment variable name
//\\ //// Replacement text (1+ lines):
char * getenv (const char *name)
//\\ //// Default Values, if needed (e.g. X1=x>0) (1+ lines):

//\\ //// Help/documentation (1+ lines):
Function: char * getenv (const char *name)
Preliminary:
| MT-Safe env
| AS-Safe 
| AC-Safe 
| See POSIX Safety Concepts.


This function returns a string that is the value of the environment
variable name.  You must not modify this string.  In some non-Unix
systems not using the GNU C Library, it might be overwritten by subsequent
calls to getenv (but not by any other library function).  If the
environment variable name is not defined, the value is a null
pointer.
file:///C:/My%20Web%20Sites/C-language/C-libC_pages/www.gnu.org/software/libc/manual/html_node//Environment-Access.html#Environment-Access
//\\ //// Tool tip (1 line):

//\\ //// Template path (e.g. core/sayHi.txt) (1 line):
/../../../templates/libc/Environment-Access/getenv.txt