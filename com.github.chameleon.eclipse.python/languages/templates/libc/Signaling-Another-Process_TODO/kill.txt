//\\ //// code completion entries (1+ lines):
sends (the,) signal signum to (the,) process or process group specified by pid
//\\ //// ==> completion hint (1 line):
sends the signal signum to the process or process group specified by pid
//\\ //// Replacement text (1+ lines):
int kill (pid_t pid, int signum)
//\\ //// Default Values, if needed (e.g. X1=x>0) (1+ lines):

//\\ //// Help/documentation (1+ lines):
Function: int kill (pid_t pid, int signum)
Preliminary:
| MT-Safe 
| AS-Safe 
| AC-Safe 
| See POSIX Safety Concepts.


The kill function sends the signal signum to the process
or process group specified by pid.  Besides the signals listed in
Standard Signals, signum can also have a value of zero to
check the validity of the pid.

The pid specifies the process or process group to receive the
signal:


pid &gt; 0
The process whose identifier is pid.


pid == 0
All processes in the same process group as the sender.


pid &lt; -1
The process group whose identifier is -pid.


pid == -1
If the process is privileged, send the signal to all processes except
for some special system processes.  Otherwise, send the signal to all
processes with the same effective user ID.



A process can send a signal to itself with a call like kill (getpid(), signum).  If kill is used by a process to send
a signal to itself, and the signal is not blocked, then kill
delivers at least one signal (which might be some other pending
unblocked signal instead of the signal signum) to that process
before it returns.

The return value from kill is zero if the signal can be sent
successfully.  Otherwise, no signal is sent, and a value of -1 is
returned.  If pid specifies sending a signal to several processes,
kill succeeds if it can send the signal to at least one of them.
There’s no way you can tell which of the processes got the signal
or whether all of them did.

The following errno error conditions are defined for this function:


EINVAL
The signum argument is an invalid or unsupported number.


EPERM
You do not have the privilege to send a signal to the process or any of
the processes in the process group named by pid.


ESRCH
The pid argument does not refer to an existing process or group.
file:///C:/My%20Web%20Sites/C-language/C-libC_pages/www.gnu.org/software/libc/manual/html_node//Signaling-Another-Process.html#Signaling-Another-Process
//\\ //// Tool tip (1 line):

//\\ //// Template path (e.g. core/sayHi.txt) (1 line):
/../../../templates/libc/Signaling-Another-Process/kill.txt