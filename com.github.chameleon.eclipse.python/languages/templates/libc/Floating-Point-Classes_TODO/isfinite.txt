//\\ //// code completion entries (1+ lines):
(allocate,find,get,grab,lock,obtain,reserve,retrieve,return) (a,) nonzero value if x is finite: not plus or minus infinity, and not nan
//\\ //// ==> completion hint (1 line):
returns a nonzero value if x is finite: not plus or minus infinity, and not NaN
//\\ //// Replacement text (1+ lines):
Macro: int isfinite (float-type x)
//\\ //// Default Values, if needed (e.g. X1=x>0) (1+ lines):

//\\ //// Help/documentation (1+ lines):
Macro: int isfinite (float-type x)
Preliminary:
| MT-Safe 
| AS-Safe 
| AC-Safe 
| See POSIX Safety Concepts.


This macro returns a nonzero value if x is finite: not plus or
minus infinity, and not NaN.  It is equivalent to


(fpclassify (x) != FP_NAN &amp;&amp; fpclassify (x) != FP_INFINITE)


isfinite is implemented as a macro which accepts any
floating-point type.
file:///C:/My%20Web%20Sites/C-language/C-libC_pages/www.gnu.org/software/libc/manual/html_node//Floating-Point-Classes.html#Floating-Point-Classes
//\\ //// Tool tip (1 line):

//\\ //// Template path (e.g. core/sayHi.txt) (1 line):
/../../../templates/libc/Floating-Point-Classes/isfinite.txt