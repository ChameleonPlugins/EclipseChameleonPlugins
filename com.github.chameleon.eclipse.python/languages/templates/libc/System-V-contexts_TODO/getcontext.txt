//\\ //// code completion entries (1+ lines):
initializes (the,) variable pointed to by ucp with (the,) context of (the,) calling thread
//\\ //// ==> completion hint (1 line):
initializes the variable pointed to by ucp with the context of the calling thread
//\\ //// Replacement text (1+ lines):
int getcontext (ucontext_t *ucp)
//\\ //// Default Values, if needed (e.g. X1=x>0) (1+ lines):

//\\ //// Help/documentation (1+ lines):
Function: int getcontext (ucontext_t *ucp)
Preliminary:
| MT-Safe race:ucp
| AS-Safe 
| AC-Safe 
| See POSIX Safety Concepts.


The getcontext function initializes the variable pointed to by
ucp with the context of the calling thread.  The context contains
the content of the registers, the signal mask, and the current stack.
Executing the contents would start at the point where the
getcontext call just returned.

The function returns 0 if successful.  Otherwise it returns
-1 and sets errno accordingly.
file:///C:/My%20Web%20Sites/C-language/C-libC_pages/www.gnu.org/software/libc/manual/html_node//System-V-contexts.html#System-V-contexts
//\\ //// Tool tip (1 line):

//\\ //// Template path (e.g. core/sayHi.txt) (1 line):
/../../../templates/libc/System-V-contexts/getcontext.txt