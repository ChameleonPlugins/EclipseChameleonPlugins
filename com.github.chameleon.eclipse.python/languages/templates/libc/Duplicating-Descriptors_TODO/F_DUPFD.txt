//\\ //// code completion entries (1+ lines):
(the,) form of (the,) call in this case is: 
//\\ //// ==> completion hint (1 line):
The form of the call in this case is: 
//\\ //// Replacement text (1+ lines):
Macro: int F_DUPFD
//\\ //// Default Values, if needed (e.g. X1=x>0) (1+ lines):

//\\ //// Help/documentation (1+ lines):
Macro: int F_DUPFD
This macro is used as the command argument to fcntl, to
copy the file descriptor given as the first argument.

The form of the call in this case is:


fcntl (old, F_DUPFD, next-filedes)


The next-filedes argument is of type int and specifies that
the file descriptor returned should be the next available one greater
than or equal to this value.

The return value from fcntl with this command is normally the value
of the new file descriptor.  A return value of -1 indicates an
error.  The following errno error conditions are defined for
this command:


EBADF
The old argument is invalid.


EINVAL
The next-filedes argument is invalid.


EMFILE
There are no more file descriptors available—your program is already
using the maximum.  In BSD and GNU, the maximum is controlled by a
resource limit that can be changed; see Limits on Resources, for
more information about the RLIMIT_NOFILE limit.



ENFILE is not a possible error code for dup2 because
dup2 does not create a new opening of a file; duplicate
descriptors do not count toward the limit which ENFILE
indicates.  EMFILE is possible because it refers to the limit on
distinct descriptor numbers in use in one process.
file:///C:/My%20Web%20Sites/C-language/C-libC_pages/www.gnu.org/software/libc/manual/html_node//Duplicating-Descriptors.html#Duplicating-Descriptors
//\\ //// Tool tip (1 line):

//\\ //// Template path (e.g. core/sayHi.txt) (1 line):
/../../../templates/libc/Duplicating-Descriptors/F_DUPFD.txt